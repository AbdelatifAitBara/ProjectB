version: '3.8'

volumes:
  prometheus_data: {}
  portainer_data: {}

services:
  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring
    deploy:
      replicas: 1

  prometheus:
    image: prom/prometheus:latest
    user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoring
    deploy:
      replicas: 1

  grafana:
    image: grafana/grafana:latest
    user: "1000"
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning/datasources
      - ./grafana:/var/lib/grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    networks:
      - monitoring
    deploy:
      replicas: 1

  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    ports:
      - 1010:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    environment:
      - TZ=Europe/Paris
    deploy:
      replicas: 1
    networks:
      - monitoring

networks:
  monitoring:
    external: true