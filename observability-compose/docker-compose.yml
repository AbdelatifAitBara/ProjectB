version: '3.8'

volumes:
  prometheus_data: {}
  portainer_data: {}

services:

  node-exporter:
    image: prom/node-exporter:latest
    container_name: Node_Exporter_Container_VM3
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - observability-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: Prometheus_Container
    user: "0:0"
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - observability-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: Grafana_Container
    user: "0:0"
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning/datasources
      - ./grafana:/var/lib/grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    networks:
      - observability-network
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    container_name: Portainer_Container
    command: -H unix:///var/run/docker.sock
    ports:
      - 1010:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    environment:
      - TZ=Europe/Paris
    networks:
      - observability-network
    restart: unless-stopped

  cadvisor: 
    image: gcr.io/cadvisor/cadvisor:latest 
    container_name: Cadvisor_Container_VM3
    ports: 
      - 8081:8080 
    networks: 
      - observability-network
    volumes: 
      - /:/rootfs:ro 
      - /var/run:/var/run:rw 
      - /sys:/sys:ro 
      - /var/lib/docker/:/var/lib/docker:ro 
    depends_on: 
      - redis 
  
  
  redis: 
    image: redis:latest 
    container_name: Redis_Container_VM3
    ports: 
      - 6379:6379 
    networks: 
      - observability-network

networks:
  observability-network:
    external: true